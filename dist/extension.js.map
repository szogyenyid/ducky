{"version":3,"file":"extension.js","mappings":"kCAAAA,EAAOC,QAAUC,QAAQ,S,GCCrBC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,CAAC,GAOX,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,OACf,C,uGCpBA,eACA,IAAIQ,EACAC,EAIJ,oBAAyBC,GACxBC,QAAQC,IAAI,0DACZJ,EAAiBK,EAAOC,OAAOC,oBAAoBF,EAAOG,mBAAmBC,MAAO,KACpFR,EAAoBI,EAAOC,OAAOC,oBAAoBF,EAAOG,mBAAmBE,MAAO,KACvFR,EAAQS,cAAcC,KAAKZ,GAC3BE,EAAQS,cAAcC,KAAKX,GAE3BI,EAAOQ,SAASC,gBAAgB,uBAAuB,MAYxD,WACCb,EAAkBc,OAClB,IAAIC,EAAQ,EACRC,GAAU,EACd,IAAIC,EAAWb,EAAOc,UAAUC,iBAAiB,SAASC,IAAI,WAAY,IACtEC,EAAOjB,EAAOc,UAAUC,iBAAiB,SAASC,IAAI,OAAQ,KAClE,IAAIE,EAGFA,EAFEL,EAAW,GACVI,EAAO,IACE,4BAEA,6CAGTA,EAAO,IACE,gEAEA,0CAId,IAAIE,EAAUC,aAAY,KACzB,IAAIC,EAAa,KAAKC,OAAOX,GACzBY,EAAQX,EAA4B,wBAAlB,gBACtBhB,EAAkB4B,KAAO,GAAGH,KAAcE,KAC1C3B,EAAkB6B,MAAQ,SACtBd,EAAQE,IAAaD,IACxBA,GAAU,GAEXA,EAAUD,IAAUA,IAChBA,EAAQ,GAAKC,IAChBhB,EAAkB4B,MAAQ,MAAMN,IAChCQ,YAAW,KACVC,cAAcR,GACdvB,EAAkBgC,MAAM,GACtB,K,GAEFX,EACJ,CAjDEY,EAAU,IAIXlC,EAAe6B,KAAO,gBACtB7B,EAAemC,QAAU,sBACzBnC,EAAeoC,QAAU,eACzBpC,EAAee,MAEhB,EA2CA,wBAA8B,C","sources":["webpack://ducky-pet/external commonjs \"vscode\"","webpack://ducky-pet/webpack/bootstrap","webpack://ducky-pet/./src/extension.ts"],"sourcesContent":["module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\nlet duckyActivator: vscode.StatusBarItem;\nlet duckyRunningSpace: vscode.StatusBarItem;\n\n// This method is called when your extension is activated\n// Your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n\tconsole.log('Congratulations, your extension \"ducky\" is now active!');\n\tduckyActivator = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Right, 100);\n\tduckyRunningSpace = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left, -1000);\n\tcontext.subscriptions.push(duckyActivator);\n\tcontext.subscriptions.push(duckyRunningSpace);\n\n\tvscode.commands.registerCommand('ducky.activateDucky', () => {\n\t\trunDucky();\n\t});\n\n\t// update status bar item once at start\n\tduckyActivator.text = `$(ducky-icon)`;\n\tduckyActivator.command = 'ducky.activateDucky';\n\tduckyActivator.tooltip = 'Toggle Ducky';\n\tduckyActivator.show();\n\n}\n\nfunction runDucky() {\n\tduckyRunningSpace.show();\n\tvar steps = 0;\n\tvar reverse = false;\n\tlet distance = vscode.workspace.getConfiguration(\"ducky\").get(\"distance\", 25);\n\tlet pace = vscode.workspace.getConfiguration(\"ducky\").get(\"pace\", 150);\n\tvar finalText = \"\";\n\tif (distance > 40) {\n\t\tif (pace < 200) {\n\t\t\tfinalText = \"I love running marathons!\";\n\t\t} else {\n\t\t\tfinalText = \"I great walking tour as always a pleasure.\";\n\t\t}\n\t} else {\n\t\tif (pace < 200) {\n\t\t\tfinalText = \"I wanna be the new Usain Bolt, thanks for practicing with me!\";\n\t\t} else {\n\t\t\tfinalText = \"That was a nice little walk, thank you!\";\n\t\t}\n\n\t}\n\tvar running = setInterval(() => {\n\t\tvar duckySteps = \"_ \".repeat(steps);\n\t\tvar icon = !reverse ? \"$(ducky-icon)\" : \"$(ducky-reverse-icon)\";\n\t\tduckyRunningSpace.text = `${duckySteps} ${icon} `;\n\t\tduckyRunningSpace.color = \"yellow\";\n\t\tif (steps > distance && !reverse) {\n\t\t\treverse = true;\n\t\t}\n\t\treverse ? steps-- : steps++;\n\t\tif (steps < 0 && reverse) {\n\t\t\tduckyRunningSpace.text += ` < ${finalText}`;\n\t\t\tsetTimeout(() => {\n\t\t\t\tclearInterval(running);\n\t\t\t\tduckyRunningSpace.hide();\n\t\t\t}, 2000);\n\t\t}\n\t}, pace);\n}\n\n// This method is called when your extension is deactivated\nexport function deactivate() {}\n"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","duckyActivator","duckyRunningSpace","context","console","log","vscode","window","createStatusBarItem","StatusBarAlignment","Right","Left","subscriptions","push","commands","registerCommand","show","steps","reverse","distance","workspace","getConfiguration","get","pace","finalText","running","setInterval","duckySteps","repeat","icon","text","color","setTimeout","clearInterval","hide","runDucky","command","tooltip"],"sourceRoot":""}